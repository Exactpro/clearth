plugins {
	id 'war'
	id 'org.gretty' version '3.1.1'
}

ext {
	core_version = '@CORE_VERSION@'
	build_version = 'build_version'
	war_name = 'clearth.war'
}

repositories {
	maven {
		name "SharedDir" // for local builds only
		url file("@CORE_SHARED_DIR@")
	}
	mavenCentral()
}

dependencies {
	implementation "com.exactprosystems.clearth:clearth-core:${core_version}"
	implementation "com.exactprosystems.clearth:clearth-gui:${core_version}"
}

configurations {
	all {
		exclude group: 'com.google.guava', module: 'guava-jdk5'
	}
}


static def getDate(String format) {
	def date = new Date()
	def formattedDate = date.format(format)
	return formattedDate
}


/*** Tasks ***/

war {
	//Faster WAR creation
	entryCompression = org.gradle.api.tasks.bundling.ZipEntryCompression.STORED
	archiveFileName = war_name
	manifest {
		attributes('Implementation-Title': 'Application based on ClearTH Core')
		attributes('Implementation-Vendor': 'Exactpro Systems LLC')
		attributes('Implementation-Vendor-Id': 'com.exactprosystems')
		attributes('Implementation-Version': "${build_version}|" + getDate('dd/MM/yyyy'))
	}
}

gretty {
	contextPath = "clearth"
	webInfIncludeJarPattern = '.*clearth.*jar$|.*primefaces.*jar$|.*jsf.*jar$|.*freemarker.*jar$'
	servletContainer = 'jetty9.4'
	serverConfigFile = 'jetty94.xml'
}

task copyWar(type: Copy, dependsOn: war) {
	from "build/libs/${war_name}"
	into 'jetty/webapps/'
}

task runClearTH(type: JavaExec, 
		group: 'ClearTH', 
		description: 'Builds WAR file, deploys it to Jetty and starts Jetty with remote debugging enabled', 
		dependsOn: copyWar) {
	workingDir = file('jetty')
	classpath = files('jetty/start.jar')
	mainClass = 'org.eclipse.jetty.start.Main'
	//debug = true
	jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
}

task buildRelease(type: Zip, group: 'ClearTH',
		description: 'Builds ClearTH release to run within Jetty, i.e. WAR file and configuration packed into ZIP archive',  
		dependsOn: copyWar) {
	from '.'
	include "jetty/webapps/${war_name}"
	include 'cfg/**/*'
	
	archiveBaseName = 'clearth'
	archiveAppendix = ''
	archiveVersion = getDate('yyyyMMdd.HHmmss')
	archiveClassifier = ''
	archiveExtension = 'zip'
	
	destinationDirectory = file("$buildDir/dist")
}

wrapper {
	gradleVersion = '8.0.1'
}